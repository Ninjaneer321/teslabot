#include <NewPing.h>
#define EchoPinLeftF 5 //  + +
#define EchoPinLeftB 2  // + +
#define EchoPinRightF A2 // + +
#define EchoPinRightB A0 // + +
#define TrigPinLeftF 6 // +  +
#define TrigPinLeftB 9 //+ 
#define TrigPinRightF A3 // + +
#define TrigPinRightB 4  // + +
#define EN_A 10 // +
#define EN_B 11 // 
#define IN_1 8 //+
#define IN_2 7 //+
#define IN_3 3 //+
#define IN_4 A1 //+  // все пины проверены

#define MAX_DISTANCE 500

#define DEBUG 1
#define BASIC 2
//int WORK_MODE = DEBUG;

int WORK_MODE = BASIC;
NewPing sonarLF(TrigPinLeftF, EchoPinLeftF, MAX_DISTANCE);   //дальномеры
NewPing sonarLB(TrigPinLeftB, EchoPinLeftB, MAX_DISTANCE);
NewPing sonarRF(TrigPinRightF, EchoPinRightF, MAX_DISTANCE);
NewPing sonarRB(TrigPinRightB, EchoPinRightB, MAX_DISTANCE);

String incomingString;
String command;
String Section1;
String Section2;
String Section3;
String Section4;

void setup()
{
  Serial.begin(9600);  // установка порта на скорость 9600 бит/сек
  pinMode(EN_A, OUTPUT);
  pinMode(EN_B, OUTPUT);
  pinMode(IN_1, OUTPUT);
  pinMode(IN_2, OUTPUT);
  pinMode(IN_3, OUTPUT);
  pinMode(IN_4, OUTPUT);
}

#define MAXSECTIONCOUNT 10
//#define DEBUG 1
//#define DEBUG_PARSE 1
String sections[MAXSECTIONCOUNT];
void parseStringFromSerial() {
  int sectionIndex = 0;
  String section;
  while (Serial.available() > 0) {
#ifdef DEBUG_PARSE
    Serial.println("in while");
#endif
    delay(5);
    char incomingChar = Serial.read();
#ifdef DEBUG_PARSE
    Serial.print("section: ");
    Serial.println(section);
    Serial.print("sectionIndex: ");
    Serial.println(sectionIndex);
    Serial.print("incomingChar: ");
    Serial.println(incomingChar);
#endif
    if (incomingChar == ' ' || incomingChar == '\n') {
      sections[sectionIndex] = section;
      section = "";
      ++sectionIndex;
    } else {
      section += incomingChar;
    }
#ifdef DEBUG_PARSE
    Serial.println("at the end of while");
    Serial.print("section: ");
    Serial.println(section);
    Serial.print("sectionIndex: ");
    Serial.println(sectionIndex);
    Serial.print("incomingChar: ");
    Serial.println(incomingChar);
#endif
  }
}


void loop() {
  if (Serial.available() > 0) {
    parseStringFromSerial();
    if (sections[0] == "MOTORS")
    {
      if (sections[1] == "MOVE_UP")
      {
        analogWrite(EN_A, String(sections[2]).toInt());
        analogWrite(EN_B, String(sections[2]).toInt());
      }
      if (sections[1] == "MOVE_DOWN")
      {
        digitalWrite(IN_1, HIGH);
        digitalWrite(IN_2, LOW);
        digitalWrite(IN_3, LOW);
        digitalWrite(IN_4, HIGH);
      }
      if (sections[1] == "MOVE_UP")
      {
        digitalWrite(IN_1, LOW);
        digitalWrite(IN_2, HIGH);
        digitalWrite(IN_3, HIGH);
        digitalWrite(IN_4, LOW);
      }
      if (sections[1] == "TURN_RIGHT")
      {
        digitalWrite(IN_1, HIGH);
        digitalWrite(IN_2, LOW);
        digitalWrite(IN_3, LOW);
        digitalWrite(IN_4, LOW);
      }
      if (sections[1] == "TURN_LEFT")
      {
        digitalWrite(IN_1, LOW);
        digitalWrite(IN_2, LOW);
        digitalWrite(IN_3, LOW);
        digitalWrite(IN_4, HIGH);
      }
       if (sections[1] == "STOP_ACTION")
      {
        digitalWrite(IN_1, LOW);
        digitalWrite(IN_2, LOW);
        digitalWrite(IN_3, LOW);
        digitalWrite(IN_4, LOW);
      }
      printSections();
      clearSections();
    }
  }
}




  void clearSections() {
    for (int i = 0; i < MAXSECTIONCOUNT; ++i)
      sections[i] = "";
  }



  void printSections() {
    for (int i = 0; i < MAXSECTIONCOUNT; ++i) {
      Serial.print("sections[");
      Serial.print(i);
      Serial.print("]: ");
      Serial.println(sections[i]);
    }
  }
